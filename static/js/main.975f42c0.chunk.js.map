{"version":3,"sources":["components/CountryInfoModal.jsx","components/CountrySelectionModal.jsx","components/Map.jsx","components/CountryFullStats.jsx","components/CountryStatsComparison.jsx","App.js","redux/actions.js","redux/reducers/covidStatsByCountryReducer.js","redux/reducers/covidStatsSingleCountryReducer.js","redux/reducers/covidStatsCountryComparisonReducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/apiService.js","index.js"],"names":["CountryInfoModal","countryData","useSelector","store","singleCountry","countryComparisonData","comparison","dispatch","useDispatch","console","log","modalStyles","css","className","country","src","countryInfo","flag","alt","cases","deaths","recovered","Button","variant","component","NavLink","to","onClick","isCountryAlreadyInState","length","forEach","iso3","type","payload","CountrySelectionModal","countrySelectionData","map","index","key","Date","getDate","ISO3","disabled","Map","countryDataStore","global","data","useRef","current","mapStyles","mapInitState","location","zoom","minZoom","MapContainer","center","TileLayer","url","attribution","noWrap","GeoJSON","countries","features","style","fillColor","fillOpacity","color","weight","onEachFeature","layer","on","mouseover","ev","target","setStyle","opacity","mouseout","click","ISO_A3","countryStats","find","handleCountryClick","feature","properties","CountryFullStats","updateDate","updated","toLocaleString","affectedData","active","testCoverageData","tests","uncoveredPopulation","population","getTestCoverage","totalCasesCenteredMetric","centerX","centerY","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","testCoverageCenteredMetric","parseInt","pieContainerStyles","margin","top","right","bottom","left","padAngle","innerRadius","cornerRadius","colors","datum","borderWidth","borderColor","from","modifiers","enableRadialLabels","sliceLabelsSkipAngle","sliceLabelsTextColor","layers","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","testCoveragePie","todayCases","todayDeaths","todayRecovered","CountryStatsComparison","useState","generateData","barTitle","barData","setBarData","statsItem","switchStatsSubjectHandler","keys","indexBy","scheme","padding","valueScale","indexScale","round","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","animate","motionStiffness","motionDamping","Bar","App","fontFamily","path","exact","LOAD_COUNTRY_DATA_LOADING","LOAD_COUNTRY_DATA_SUCCESS","LOAD_COUNTRY_DATA_ERROR","initState","loading","error","covidStatsByCountryReducer","state","action","covidStatsCountryComparisonReducer","removeCountryIndex","findIndex","splice","rootReducer","combineReducers","covidStatsSingleCountryReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","axios","get","then","response","catch","loadCountryDataError","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.975f42c0.chunk.js","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Route} from 'react-router-dom';\nimport { css, jsx } from '@emotion/react';\nimport { Button } from '@material-ui/core';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\n\nexport default function CountryInfoModal() {\n\n    const countryData = useSelector(store => store.singleCountry);\n    const countryComparisonData = useSelector(store => store.comparison);\n\n    const dispatch = useDispatch();\n    console.log(countryData)\n\n    const addToSelectionHandler = () => {\n        let isCountryAlreadyInState = false\n\n        if (countryComparisonData.length > 0) {\n            countryComparisonData.forEach((country) => {\n                if (countryData.countryInfo.iso3 === country.countryInfo.iso3) {\n                    isCountryAlreadyInState = true\n                }\n            })\n        }\n\n        if (isCountryAlreadyInState || countryComparisonData.length === 4) {\n            return\n        }\n\n        dispatch({\n            type: 'ADD_COUNTRY_TO_SELECTION',\n            payload: countryData,\n        })\n    };\n\n    const modalStyles = css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      z-index: 20;\n      width: 300px;\n      margin: 1rem;\n      padding: 1rem;\n      background-color: #ffffff;\n      border-radius: 12px;\n      box-shadow: 0 10px 20px rgba(0,0,0,0.19),\n                  0 6px 6px rgba(0,0,0,0.23);\n      \n      & h2 {\n        margin: 0;\n        font-weight: 400;\n      }\n      & img {\n        width: 50px;\n        object-fit: contain;\n        border: 1px solid #000000;\n      }\n    `;\n\n    return (\n        <div className={'modal'}\n             css={modalStyles}\n        >\n            {\n                countryData ?\n                    <>\n                        <div css={css`\n                            display: flex;\n                            justify-content: space-between;\n                            align-items: center;\n                            height: 55px;\n                        `}>\n                            <h2>{countryData.country}</h2>\n                            <img src={countryData.countryInfo.flag} alt={`the flag of ${countryData.country}`}/>\n                        </div>\n                        <p>Total cases: {countryData.cases}</p>\n                        <p>Total deaths: {countryData.deaths}</p>\n                        <p>Total recovered: {countryData.recovered}</p>\n                        <div\n                            css={css`\n                                    display: flex;\n                                    justify-content: space-between;\n                                    align-items: center;\n                        `}\n                        >\n                            <Button variant=\"contained\"\n                                    component={NavLink}\n                                    to='/country-full-stats'\n                            >See more\n                            </Button>\n                            <Button variant=\"contained\"\n                                    onClick={addToSelectionHandler}\n                            >Add to selection\n                            </Button>\n                        </div>\n                    </>\n                    :\n                    <h2>Click a country to see its COVID-19 statistics!</h2>\n            }\n        </div>\n    )\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { css, jsx } from \"@emotion/react\";\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\n\nexport default function CountrySelectionModal() {\n\n    const countrySelectionData = useSelector(store => store.comparison);\n    const dispatch = useDispatch();\n\n    const removeCountryHandler = (ISO3) => {\n        dispatch({\n            type: 'REMOVE_COUNTRY_FROM_SELECTION',\n            payload: ISO3,\n        })\n    }\n\n    const modalStyles = css`\n      position: absolute;\n      bottom: 0;\n      left: 350px;\n      z-index: 20;\n      min-width: 300px;\n      margin: 1rem;\n      padding: 1rem;\n      background-color: #ffffff;\n      border-radius: 12px;\n      box-shadow: 0 10px 20px rgba(0,0,0,0.19),\n                  0 6px 6px rgba(0,0,0,0.23);\n      \n      & h2 {\n        position: relative;\n        margin: 0;\n        font-weight: 400;\n      }\n    `;\n\n    return (\n        <div css={modalStyles}>\n            <h2>Selected Countries:\n                <span\n                    css={css`\n                          font-size: 1rem;\n                          position: absolute;\n                          right: 0;\n                          top: 5px;\n                        `}\n                >{`${countrySelectionData.length}/4`}\n                </span>\n            </h2>\n\n            {\n                countrySelectionData.length !== 0\n                ?\n                    <>\n                        <div css={css`\n                          margin: 1rem 0;\n\n                          & span {\n                            margin-right: 5px;\n                            padding: 5px;\n                            border-radius: 5px;\n                            background: #8cd2d3;\n                            \n                            & button {\n                              margin-left: 5px;\n                              background-color: transparent;\n                              border: none;\n                              cursor: pointer;\n                              \n                              &:focus {\n                                outline: none;\n                              }\n                            }\n                          }\n                        `\n                        }>\n                            {\n                                countrySelectionData.map((country, index) => (\n                                    <span\n                                        key={`${new Date().getDate()}-${country.countryInfo.iso3}`}\n                                        >{country.country}\n                                        <button\n                                            onClick={() => removeCountryHandler(country.countryInfo.iso3)}\n                                        >x\n                                        </button>\n                                    </span>\n                                ))\n                            }\n                        </div>\n                        {\n                            countrySelectionData.length <= 1\n                            ?\n                                <Button\n                                    variant={\"contained\"}\n                                    disabled\n                                >Compare\n                                </Button>\n                            :\n                                <Button\n                                    variant={\"contained\"}\n                                    component={NavLink}\n                                    to={'/country-comparison'}\n                                >Compare\n                                </Button>\n                        }\n                    </>\n                :\n                null\n            }\n\n        </div>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport {GeoJSON, MapContainer, TileLayer} from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport { css, jsx} from '@emotion/react'\nimport countries from './../data/countries.json';\nimport CountryInfoModal from \"./CountryInfoModal\";\nimport CountrySelectionModal from \"./CountrySelectionModal\";\n\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\n\nfunction Map() {\n\n    const countryDataStore = useSelector(store => store.global.data);\n\n    const dispatch = useDispatch();\n\n    let data = useRef();\n    data.current = countryDataStore;\n\n    const handleCountryClick = (ISO_A3) => {\n        const countryStats = data.current.find((country) => country.countryInfo.iso3 === ISO_A3)\n\n        if (!countryStats) {\n            return\n        }\n\n        dispatch({\n            type: 'SET_COUNTRY_DATA',\n            payload: countryStats,\n        })\n    };\n\n    const countryEventsHandler = (country, layer) => {\n        layer.on({\n            mouseover: (ev) => {\n                ev.target.setStyle({\n                    fillOpacity: 0.5,\n                    opacity: 0.5,\n                })\n            },\n            mouseout: (ev) => {\n                ev.target.setStyle({\n                    fillOpacity: 0,\n                    opacity: 0.1,\n                })\n            },\n            click: (ev) => {\n                handleCountryClick(ev.target.feature.properties.ISO_A3)\n            },\n        })\n    };\n\n    const mapStyles = css`\n      z-index: 1;\n      width: 100vw;\n      height: 100vh;\n    `;\n\n    const countryStyles = {\n        fillColor: 'gray',\n        fillOpacity: 0,\n        color: 'black',\n        weight: 0.1,\n    };\n\n    const mapInitState = {\n        location: [53.7098, 27.9534],\n        zoom: 4,\n        minZoom: 2,\n    };\n\n    return (\n        <>\n            <MapContainer center={mapInitState.location}\n                          zoom={mapInitState.zoom}\n                          minZoom={mapInitState.minZoom}\n                          css={mapStyles}\n\n            >\n                <TileLayer url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png\"\n                           attribution='&copy; <a href=\"https://carto.com/\">carto.com</a> contributors'\n                           noWrap={true}\n                />\n\n                <GeoJSON\n                    data={countries.features}\n                    style={countryStyles}\n                    onEachFeature={countryEventsHandler}\n                />\n\n            </MapContainer>\n\n            <CountryInfoModal/>\n            <CountrySelectionModal/>\n        </>\n    )\n}\n\nexport default Map;\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { ResponsivePie } from '@nivo/pie';\nimport { Button } from \"@material-ui/core\";\nimport { css, jsx} from '@emotion/react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\n\nexport default function CountryFullStats() {\n    // use let and set country data to some country then reassign it with data from store\n    const countryData = useSelector(store => store.singleCountry);\n\n    const updateDate = new Date(+countryData.updated).toLocaleString();\n\n    const affectedData = [\n        {\n            \"id\": \"recovered\",\n            \"label\": \"recovered\",\n            \"value\": +countryData.recovered,\n            \"color\": \"#39d676\"\n        },\n        {\n            \"id\": \"active\",\n            \"label\": \"active cases\",\n            \"value\": +countryData.active,\n            \"color\": \"#E6BE2B\"\n        },\n        {\n            \"id\": \"deaths\",\n            \"label\": \"deaths\",\n            \"value\": +countryData.deaths,\n            \"color\": \"#df0f35\"\n        },\n    ]\n\n    const getTestCoverage = () => {\n        const uncoveredPopulation = (+countryData.population) - (+countryData.tests)\n\n        if (uncoveredPopulation < 0) {\n            return 0\n        }\n\n        return uncoveredPopulation\n    }\n\n    const testCoverageData = [\n        {\n            \"id\": \"covered\",\n            \"label\": \"covered by tests\",\n            \"value\": +countryData.tests,\n            \"color\": \"#39d676\"\n        },\n        {\n            \"id\": \"uncovered\",\n            \"label\": \"uncovered by tests\",\n            \"value\": getTestCoverage(),\n            \"color\": \"#919191\"\n        },\n    ]\n\n    const totalCasesCenteredMetric = ({ centerX, centerY }) => {\n\n        return (\n            <text\n                x={centerX}\n                y={centerY}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    fontSize: '2rem',\n                    fontWeight: '600',\n                }}\n            >\n                {countryData.cases}\n            </text>\n        )\n    }\n\n    const affectedPopulationPie = (data) => (\n        <ResponsivePie\n            data={data}\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n            padAngle={3}\n            innerRadius={0.5}\n            cornerRadius={16}\n            colors={{ datum: 'data.color' }}\n            borderWidth={1}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n            enableRadialLabels={false}\n            sliceLabelsSkipAngle={10}\n            sliceLabelsTextColor=\"rgba(0, 0, 0, 0)\"\n            layers={['slices', 'sliceLabels', 'radialLabels', 'legends', totalCasesCenteredMetric]}\n            legends={[\n                {\n                    anchor: 'bottom',\n                    direction: 'row',\n                    justify: false,\n                    translateX: 0,\n                    translateY: 56,\n                    itemsSpacing: 0,\n                    itemWidth: 100,\n                    itemHeight: 18,\n                    itemTextColor: '#999',\n                    itemDirection: 'left-to-right',\n                    itemOpacity: 1,\n                    symbolSize: 18,\n                    symbolShape: 'circle',\n                }\n            ]}\n        />\n    )\n\n    const testCoverageCenteredMetric = ({ centerX, centerY }) => {\n\n        return (\n            <text\n                x={centerX}\n                y={centerY}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    fontSize: '2rem',\n                    fontWeight: '600',\n                }}\n            >\n                {parseInt(+countryData.tests / +countryData.population * 100) + '%'}\n            </text>\n        )\n    }\n\n    const testCoveragePie = (data) => (\n        <ResponsivePie\n            data={data}\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n            padAngle={3}\n            innerRadius={0.5}\n            cornerRadius={16}\n            colors={{ datum: 'data.color' }}\n            borderWidth={1}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n            enableRadialLabels={false}\n            sliceLabelsSkipAngle={10}\n            sliceLabelsTextColor=\"rgba(0, 0, 0, 0)\"\n            layers={['slices', 'sliceLabels', 'radialLabels', 'legends', testCoverageCenteredMetric]}\n            legends={[\n                {\n                    anchor: 'bottom',\n                    direction: 'row',\n                    justify: false,\n                    translateX: 0,\n                    translateY: 56,\n                    itemsSpacing: 30,\n                    itemWidth: 100,\n                    itemHeight: 18,\n                    itemTextColor: '#999',\n                    itemDirection: 'left-to-right',\n                    itemOpacity: 1,\n                    symbolSize: 18,\n                    symbolShape: 'circle',\n                }\n            ]}\n        />\n    );\n\n    const pieContainerStyles = css`\n      position: relative;\n      height: 500px;\n      width: 500px;\n      \n      & h3 {\n        margin: 0;\n        text-align: center;\n      }\n    `;\n\n    return (\n        countryData\n        &&\n            <div\n                css={css`\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                  height: 100%;\n                  background: gray;\n                  overflow: scroll;\n                `}\n            >\n                <div\n                    css={css`\n                        display: flex;\n                        flex-wrap: wrap;\n                        flex-direction: column;\n                        justify-content: center;\n                        align-items: center;\n                        margin: 1rem 0;\n                        padding: 3rem 3rem 2rem 3rem;\n                        border-radius: 10px;\n                        background: #FFFFFF;\n                \n                & img {\n                  border: 1px solid black;\n                }\n            `}\n                >\n                    <div\n                    >\n                        <div css={css`\n                              display: flex;\n                              width: 100%;\n                          `}\n                        >\n                            <img\n                                css={css`\n                                      height: 70px;\n                                      margin-right: 1rem;\n                                    `}\n                                src={countryData.countryInfo.flag}\n                                alt={`the flag of ${countryData.country}`}\n                            />\n                            <div css={css`\n                                  display: flex;\n                                  flex-direction: column;\n                                  justify-content: space-between;\n                                  width: 100%;\n                      \n                                    h1 {\n                                      margin: 0;\n                                    }\n                              `\n                            }>\n                                <h1>{countryData.country} COVID-19 Statistics</h1>\n                                <p>updated on {updateDate}</p>\n                            </div>\n                            <Button\n                                variant={\"contained\"}\n                                component={NavLink}\n                                to='/'\n                                css={css`text-align: center`}\n                            > Back to map\n                            </Button>\n                        </div>\n                    </div>\n                    <div\n                        css={css`\n                    display: flex;\n                    height: 500px;\n                    padding-top: 2rem;\n                    `}\n                    >\n                        <div\n                            css={pieContainerStyles}\n                        >\n                            <h3>Afected Population</h3>\n                            {affectedPopulationPie(affectedData)}\n                        </div>\n                        <div\n                            css={pieContainerStyles}\n                        >\n                            <h3>Test Coverage</h3>\n                            {testCoveragePie(testCoverageData)}\n                        </div>\n                    </div>\n                    <div css={css`\n                          display: flex;\n                          flex-direction: column;\n                          align-self: center;\n                          margin-top: 3rem;\n                          \n                          & h3 {\n                            margin: 0;\n                          }\n                          \n                          & ul {\n                            margin-top: 1rem;\n                            padding-left: 20px;\n                          }\n                          \n                          & li {\n                            margin: 10px 0;\n                            list-style-type: disk;\n                          }\n                        `}\n                    >\n                        <h3>Today's Statistics:</h3>\n                        <ul>\n                            <li>Cases: {countryData.todayCases}</li>\n                            <li>Deaths: {countryData.todayDeaths}</li>\n                            <li>Recovered: {countryData.todayRecovered}</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n    )\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\nimport {ResponsiveBar} from '@nivo/bar'\nimport { jsx, css } from \"@emotion/react\";\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\n\nexport default function CountryStatsComparison() {\n\n    const countryData = useSelector(store => store.comparison)\n\n    const [barData, setBarData] = useState({\n        data: generateData('cases'),\n        barTitle: 'Total cases by country',\n    })\n\n    function generateData(statsItem) {\n        return [\n            ...countryData.map((country) => (\n                {\n                    \"country\": country.countryInfo.iso3,\n                    [country.countryInfo.iso3]: country[statsItem],\n                }\n            ))\n        ]\n    }\n\n    const switchStatsSubjectHandler = (statsItem, barTitle) => {\n        setBarData({\n                ...barData,\n                data: generateData(statsItem),\n                barTitle: barTitle,\n            }\n        )\n    }\n\n    const keys = countryData.map((country) => (country.countryInfo.iso3))\n\n    const Bar = (barData) => (\n        <ResponsiveBar\n            data={barData}\n            keys={keys}\n            indexBy=\"country\"\n            colors={{ scheme: 'pastel1' }}\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n            padding={0.3}\n            valueScale={{ type: 'linear' }}\n            indexScale={{ type: 'band', round: true }}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'country',\n                legendPosition: 'middle',\n                legendOffset: 32\n            }}\n            labelSkipWidth={12}\n            labelSkipHeight={12}\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            legends={[\n                {\n                    dataFrom: 'barData.country',\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 120,\n                    translateY: 0,\n                    itemsSpacing: 2,\n                    itemWidth: 100,\n                    itemHeight: 20,\n                    itemDirection: 'left-to-right',\n                    itemOpacity: 0.85,\n                    symbolSize: 20,\n                }\n            ]}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n        />\n    )\n\n    return (\n        <div\n            css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              align-items: center;\n              height: 100%;\n              background-color: gray;\n            `}\n        >\n            <div\n                css={css`\n                    margin: 1rem 0;\n                    padding: 3rem;\n                    border-radius: 10px;\n                    background-color: #FFFFFF;\n                `}\n            >\n                <div\n                    css={css`\n                    display: flex;\n                `}\n                >\n                    <h1\n                        css={css`\n                        width: 100%;\n                        text-align: center;\n                        margin: 1rem;\n                    `}\n                    >\n                        {\n                            countryData.map((country, index) => (\n                                index === countryData.length - 1\n                                    ?\n                                    <span\n                                        key={`${new Date().getDate()}-${index}`}\n                                    >{`${country.country} `}\n                    </span>\n                                    :\n                                    <span\n                                        key={`${new Date().getDate()}-${index}`}\n                                    >{`${country.country}, `}\n                    </span>\n                            ))\n                        }\n                        Comparative Statistics\n                    </h1>\n                    <Button\n                        variant={\"contained\"}\n                        css={css`text-align: center`}\n                        component={NavLink}\n                        to='/'\n                    >Back to Map\n                    </Button>\n                </div>\n                <div\n                    css={css`\n                      display: flex;\n                      justify-content: space-evenly;\n                      margin: 3rem 1rem 2rem 1rem;\n                    `}\n                >\n                    <Button\n                        variant={\"contained\"}\n                        onClick={() => switchStatsSubjectHandler('cases', 'Total Cases by Country')}\n                    >Total Cases\n                    </Button>\n                    <Button\n                        variant={\"contained\"}\n                        onClick={() => switchStatsSubjectHandler('active', 'Total Active Cases by Country')}\n                    >Total Active Cases\n                    </Button>\n                    <Button\n                        variant={\"contained\"}\n                        onClick={() => switchStatsSubjectHandler('deaths', 'Total Deaths by Country')}\n                    >Total Deaths\n                    </Button>\n                    <Button\n                        variant={\"contained\"}\n                        onClick={() => switchStatsSubjectHandler('recovered', 'Total Recovered by Country')}\n                    >Total Recovered\n                    </Button>\n                </div>\n                <h3\n                    css={css`text-align: center`}\n                >{barData.barTitle}\n                </h3>\n                <div\n                    css={css`\n                    margin: 0 auto;\n                    height: 500px;\n                    width: 700px;\n                `}\n                >\n                    {Bar(barData.data)}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Map from './components/Map';\nimport CountryFullStats from \"./components/CountryFullStats\";\nimport CountryStatsComparison from \"./components/CountryStatsComparison\";\n\nfunction App() {\n    return (\n        <div className=\"App\"\n             style={{fontFamily: 'Poppins'}}\n        >\n\n            <Route\n                path='/'\n                exact\n                component={Map}\n            >\n            </Route>\n\n            <Route\n                path='/country-full-stats'\n                exact\n                component={CountryFullStats}\n            >\n            </Route>\n\n            <Route\n                path='/country-comparison'\n                exact\n                component={CountryStatsComparison}\n            >\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","export const LOAD_COUNTRY_DATA_LOADING = 'LOAD_COUNTRY_DATA_LOADING';\nexport const LOAD_COUNTRY_DATA_SUCCESS = 'LOAD_COUNTRY_DATA_SUCCESS';\nexport const LOAD_COUNTRY_DATA_ERROR = 'LOAD_COUNTRY_DATA_ERROR';\n\nexport function loadCountryDataLoading() {\n    return {\n        type: LOAD_COUNTRY_DATA_LOADING,\n    };\n}\n\nexport function loadCountryDataSuccess(data) {\n    return {\n        type: LOAD_COUNTRY_DATA_SUCCESS,\n        payload: data,\n    };\n}\n\nexport function loadCountryDataError(error) {\n    return {\n        type: LOAD_COUNTRY_DATA_ERROR,\n        payload: error,\n    }\n}\n","import {LOAD_COUNTRY_DATA_ERROR, LOAD_COUNTRY_DATA_LOADING, LOAD_COUNTRY_DATA_SUCCESS} from \"../actions\";\n\nconst initState = {\n    data: [],\n    loading: false,\n    error: '',\n};\n\nconst covidStatsByCountryReducer = (state = initState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case LOAD_COUNTRY_DATA_LOADING: {\n            return {\n                ...state,\n                loading: true,\n                error:''\n            };\n        }\n        case LOAD_COUNTRY_DATA_SUCCESS: {\n            return {\n                ...state,\n                data: [...payload],\n                loading: false\n            }\n        }\n        case LOAD_COUNTRY_DATA_ERROR: {\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport default covidStatsByCountryReducer;\n","const initState = null;\n\nconst covidStatsByCountryReducer = (state = initState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case 'SET_COUNTRY_DATA': {\n            return {\n                ...payload,\n            };\n        }\n        default:\n            return state\n    }\n}\n\nexport default covidStatsByCountryReducer;\n","const initState = [];\n\nconst covidStatsCountryComparisonReducer = (state = initState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case 'ADD_COUNTRY_TO_SELECTION': {\n            return [\n                ...state,\n                {...payload},\n            ];\n        }\n        case 'REMOVE_COUNTRY_FROM_SELECTION': {\n            console.log(state)\n            const removeCountryIndex = state.findIndex((country) => country.countryInfo.iso3 === payload);\n            state.splice(removeCountryIndex, 1)\n\n            return [\n                ...state\n            ];\n        }\n        default:\n            return state\n    }\n};\n\nexport default covidStatsCountryComparisonReducer;\n","import { combineReducers} from \"redux\";\nimport covidStatsByCountryReducer from \"./covidStatsByCountryReducer\";\nimport covidStatsSingleCountryReducer from \"./covidStatsSingleCountryReducer\";\nimport covidStatsCountryComparisonReducer from \"./covidStatsCountryComparisonReducer\";\n\nconst rootReducer = combineReducers(\n    {\n                global: covidStatsByCountryReducer,\n                singleCountry: covidStatsSingleCountryReducer,\n                comparison: covidStatsCountryComparisonReducer,\n        }\n    );\n\nexport default rootReducer;","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport loadCountryData from \"./apiService\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n);\n\nstore.dispatch(loadCountryData());\n\nexport default store;\n","import axios from \"axios\";\nimport {loadCountryDataLoading, loadCountryDataSuccess, loadCountryDataError} from './actions'\n\nconst API_BASE_ADDRESS = 'https://corona.lmao.ninja/v2/countries';\n\nexport default function loadCountryData() {\n    return dispatch => {\n        dispatch(loadCountryDataLoading());\n        axios\n            .get(\n                API_BASE_ADDRESS\n            )\n            .then(response => {\n                dispatch(loadCountryDataSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(loadCountryDataError(error));\n            });\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}